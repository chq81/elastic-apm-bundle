parameters:
    elastic_apm:
        enabled: true
        serviceName: ~ # The name of your service, required

services:
    elastic_apm.listener.request:
        class: Goksagun\ElasticApmBundle\EventListener\ApmTransactionRegisterListener
        arguments:
            - '@elastic_apm.service.agent'
        calls:
            -   method: setLogger
                arguments:
                    - '@?logger'
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest, priority: 31 }

    elastic_apm.listener.terminate:
        class: Goksagun\ElasticApmBundle\EventListener\ApmTransactionSenderListener
        arguments:
            - '@elastic_apm.service.agent'
        calls:
            -   method: setSecurityHelper
                arguments:
                    - '@security'
            -   method: setLogger
                arguments:
                    - '@?logger'
        tags:
            - { name: kernel.event_listener, event: kernel.terminate, method: onKernelTerminate, priority: -2048 }

    elastic_apm.listener.exception:
        class: Goksagun\ElasticApmBundle\EventListener\ApmErrorCaptureListener
        arguments:
            - '@elastic_apm.service.agent'
        calls:
            -   method: setLogger
                arguments:
                    - '@?logger'
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException, priority: 32 }

    elastic_apm.service.agent:
        class: Nipwaayoni\Agent
        factory: ['Goksagun\ElasticApmBundle\Apm\ElasticApmFactory', 'createAgent']
        arguments:
            - '%elastic_apm%'
            - '@?logger'
